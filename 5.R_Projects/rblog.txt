

# R Blog

## Chocolate Flavors 1/18/22 @tidytuesday

``library(magrittr)
library(dplyr)
library(knitr)
d <- read.csv('chocolate.csv')
n=10
words <- d %>% pull(9) %>% toString %>% strsplit(split=",") %>% table
words <- words[which(words > n)]
ratings <- sapply(names(words),function(x){d %>% filter(grepl(x,most_memorable_characteristics,fixed=TRUE)) %>% summarise(mean_rating=mean(rating))}) %>% as.numeric
tab <- cbind(words,ratings) 
kable(tab[order(tab[,2]),],caption="Average Ratings by Characteristic")``


Table: Average Ratings by Characteristic

|               | words|  ratings|
|:--------------|-----:|--------:|
|unrefined      |    15| 2.416667|
|chemical       |    16| 2.489130|
|medicinal      |    15| 2.546875|
|off notes      |    26| 2.610000|
|musty          |    11| 2.645833|
|off note       |    15| 2.668605|
|strong vanilla |    11| 2.687500|
|cardboard      |    16| 2.692308|
|off            |    37| 2.707071|
|flat           |    13| 2.714286|
|waxy           |    13| 2.750000|
|pungent        |    33| 2.787037|
|rubber         |    21| 2.789474|
|bitter         |    67| 2.794248|
|vanilla        |    88| 2.813253|
|rubbery        |    28| 2.833333|
|ashey          |    11| 2.840909|
|harsh          |    15| 2.866667|
|metallic       |    33| 2.881579|
|dry            |    63| 2.886364|
|dirty          |    26| 2.891304|
|burnt          |    22| 2.909091|
|bland          |    20| 2.946429|
|few grits      |    13| 2.950000|
|leather        |    12| 2.977273|
|chalky         |    17| 3.000000|
|molasses       |    85| 3.000000|
|muted          |    20| 3.000000|
|powdery        |    16| 3.000000|
|earthy         |   189| 3.024039|
|astringent     |    35| 3.032895|
|sour           |   133| 3.037634|
|sweet          |   267| 3.042986|
|hammy          |    28| 3.043103|
|sour milk      |    17| 3.053571|
|perfume        |    12| 3.062500|
|ham            |    14| 3.079546|
|vegetal        |    36| 3.080645|
|chewy          |    14| 3.083333|
|smokey         |    45| 3.094828|
|intense        |   138| 3.097656|
|sandy          |   167| 3.098214|
|high roast     |    11| 3.100000|
|fatty          |   164| 3.111111|
|gritty         |    67| 3.115385|
|mild fruit     |    30| 3.129630|
|green          |    20| 3.138889|
|coarse         |    26| 3.142857|
|mild bitter    |    28| 3.147059|
|woody          |    86| 3.159091|
|heavy roast    |    16| 3.181818|
|tangy          |    19| 3.187500|
|basic cocoa    |    24| 3.191177|
|savory         |    13| 3.192308|
|tart           |    64| 3.202381|
|smoke          |    38| 3.221154|
|roasty         |   212| 3.228198|
|coffee         |    72| 3.229412|
|tobacco        |    31| 3.234375|
|coconut        |    17| 3.250000|
|dairy          |    47| 3.250000|
|floral         |   143| 3.250000|
|oily           |    52| 3.250000|
|rustic         |    14| 3.250000|
|acidic         |    41| 3.257812|
|mild           |    11| 3.261076|
|bold           |    21| 3.269231|
|simple         |    13| 3.275000|
|marshmallow    |    19| 3.277778|
|black pepper   |    20| 3.281250|
|mint           |    13| 3.284091|
|caramel        |    58| 3.288136|
|banana         |    45| 3.292553|
|sticky         |    82| 3.294118|
|red fruit      |    17| 3.295454|
|black licorice |    14| 3.300000|
|nutty          |   260| 3.303109|
|nut            |    29| 3.312500|
|spice          |    64| 3.314607|
|sweet edge     |    11| 3.321429|
|fruit          |    86| 3.322635|
|spicy          |   138| 3.324176|
|nuts           |    21| 3.330000|
|licorice       |    20| 3.330645|
|grassy         |    63| 3.335366|
|red berry      |    26| 3.336956|
|bright fruit   |    14| 3.343750|
|fruity         |    56| 3.356250|
|rum            |    15| 3.359375|
|melon          |    29| 3.360000|
|tea            |    12| 3.361111|
|bourbon        |    11| 3.363636|
|brownie        |    44| 3.369792|
|citrus         |    25| 3.379032|
|cocoa          |   247| 3.381147|
|honey          |    30| 3.389706|
|orange         |    20| 3.410000|
|lemon          |    16| 3.411765|
|cinamon        |    11| 3.416667|
|raisins        |    17| 3.416667|
|rich cocoa     |    52| 3.416667|
|berry          |    17| 3.421233|
|dried fruit    |    70| 3.423469|
|cherry         |    37| 3.432432|
|butterscotch   |    16| 3.446429|
|grapes         |    17| 3.458333|
|strawberry     |    24| 3.460526|
|deep cocoa     |    13| 3.464286|
|rich           |    70| 3.465686|
|grape          |    12| 3.466667|
|creamy         |   189| 3.471154|
|light color    |    13| 3.500000|
|fig            |    15| 3.529412|
|peanut butter  |    12| 3.535714|
|mild smoke     |    11| 3.541667|
|dark berry     |    17| 3.555556|
|complex        |    50| 3.575000|
|blackberry     |    11| 3.607143|
|long           |    11| 3.675000|
|delicate       |    12| 3.700000|
|raspberry      |    14| 3.711539|
|smooth         |    27| 3.750000|
|balanced       |    16| 3.770833|

## Flight of the Bumblebees 1/10/22 @tidytuesday

[Tidy Tuesday](https://github.com/rfordatascience/tidytuesday) is a weekly data science "challenge" for the R community. This week's dataset tracks bee colonies in the US over the past few years.  

This week, I made an R Shiny web app that converts data on the number of colonies in each state into a song. My favorite state is listen to is Georgia (my home state). When played fast enough, these little songs sound vaguely like [Flight of the Bumblebee](https://www.youtube.com/watch?v=M93qXQWaBdE).

[The app can be found here](https://g-econ.shinyapps.io/Flight_of_the_Bumblebees). 

*At the moment it does not work on iphone, but has been tested on windows, linux, and android.*

## Code Golf Abundant Numbers 11/15/21 @codegolf

The goal in *code golf* is to produce a program that solves a problem with as few characters as possible. Here is a code golf problem where R does pretty well.

### Abundant Numbers

This problem comes from [Here](<https://code.golf/abundant-numbers>](https://code.golf/abundant-numbers).

*An abundant number is a number for which the sum of its proper divisors (divisors not including the number itself) is greater than the number itself. For example **12** is abundant because its proper divisors are **1**, **2**, **3**, **4**, and **6** which add up to **16**.*

*Print all the abundant numbers from **1** to **200** inclusive, each on their own line.*

### Code: (46 Characters)

This code takes advantage of R's matrix functions and operators.

```{r abundant}
a=1:200
t(t(a[((!outer(a,a,"%%"))%*%a)>=2*a]))
```
